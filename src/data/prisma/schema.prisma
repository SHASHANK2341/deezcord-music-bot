// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Languages {
  EnglishUS
  EnglishGB
  German 
  Bulgarian
  ChineseCN
  ChineseTW
  Croatian
  Czech
  Danish 
  Dutch
  Finnish 
  French 
  Greek
  Hindi 
  Hungarian
  Italian 
  Japanese 
  Korean
  Lithuanian
  Norwegian
  Polish
  PortugueseBR 
  Romanian
  Russian
  SpanishE
  Swedish
  Thai
  Turkish
  Ukrainian
  Vietnamese
}

// Guild Data
model GuildSettings {
  guildId             String    @id
  defaultvolume       Int       @default(100)
  defaultautoplay     Boolean   @default(true)
  language            Languages @default(EnglishUS)
  ephemeralNowPlaying Boolean   @default(true)
  extraData           Json? // can be anything inside a JSON.stringify({});
}

// User Data (vote system?)
model UserData {
  userId         String   @id
  songHistory    String[] @default([])
  commandHistory String[] @default([])
  deezerToken    String?
  deezerId       String?
  // votedAt    String?
  // voteCounts Int     @default(0)
  extraData      Json? // can be anything inside a JSON.stringify({});
}

// for saving lyrics in db
model Lyrics {
  trackId String @id
  author  String
  title   String
  lyrics  String
}
model DeezerLyrics {
  trackId String @id
  author  String
  title   String
  LYRICS_ID String
  LYRICS_TEXT String
  LYRICS_WRITERS String
  LYRICS_COPYRIGHTS String
  LYRICS_SYNC_JSON Json
}

// DJ Settings per Guild
model DJSettings {
  guildId        String   @id
  enabled        Boolean  @default(false)
  access         String[] @default([]) // roleIds
  djonlycommands String[] @default(["bassboost", "bettermusiceq", "clearfilters", "echo", "karaoke", "lowpass", "nightcore", "pitch", "rate", "pop", "speed", "rotating", "resume", "rewind", "seek", "shuffle", "skip", "stop", "stoploop", "unshuffle", "volume", "autoplay", "clearqueue", "forward", "jump", "leave", "loop", "move", "pause", "playskip", "playtop", "removedupes", "replay", "tremolo"])
  extraData      Json? // can be anything inside a JSON.stringify({});
}

// each guild can disable / enable Commands
model DisabledCommands {
  guildId       String   @id
  commands      String[]
  slashCommands String[]
}
